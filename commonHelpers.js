import{i as c,S as l}from"./assets/vendor-5b791d57.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();function p(s){const r="https://pixabay.com/api/?",n=new URLSearchParams({key:"43022470-1213c485ef19c9845e2639418",q:s,image_type:"photo",orientation:"horizontal",safesearch:!0}),a=`${r}${n}`;return fetch(a).then(e=>e.json())}function u({webformatURL:s,tags:r,views:n,likes:a,comments:e,downloads:t,largeImageURL:i}){return`<li class="image-item">
  <a class="image-link" href="${i}">
  <img src="${s}" alt="${r}" width ="300" height="200" ></a>
  <div class="tex-container">
  <p class="image-text">Likes <span class="span-text">${a}</span></p>
  <p class="image-text">Views <span class="span-text">${n}</span></p>
  <p class="image-text">Comments <span class="span-text">${e}</span></p>
  <p class="image-text">Downloads <span class="span-text">${t}</span></p>
  </div>
</li>`}function m(s){return s.map(u).join("")}function f(){return'<span class="loader">Loading</span>'}function g(){return'<span class="error">ERROR</span>'}const o=document.querySelector(".image-list"),d=document.querySelector(".form-search");d.addEventListener("submit",h);function h(s){s.preventDefault();const r=s.target.elements.search.value.trim();r&&(o.innerHTML="",o.insertAdjacentHTML("afterbegin",f()),p(r).then(n=>{if(!n.hits.length)o.innerHTML="",c.show({position:"topRight",color:"red",messageColor:"black",message:"Sorry, there are no images matching your search query. Please try again!"});else{const a=m(n.hits);o.innerHTML=a,new l(".image-link",{captionsData:"alt",captionDelay:250}).refresh()}}).catch(()=>{o.insertAdjacentHTML("afterbegin",g())}),s.target.reset())}
//# sourceMappingURL=commonHelpers.js.map
